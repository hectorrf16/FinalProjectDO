services:
  app:
    build:
      context: .
      dockerfile: app-dockerfile
    container_name: app
    stdin_open: true
    tty: true
    restart: always
    labels:
      co.elastic.logs/enabled: true
    volumes:
    - ./app:/app
    - ./app/logs:/var/logs
    ports:
    - 80:8080
    environment:
    - DEBUG=True
    - RELOADER=True

  db:
    image: postgres:alpine
    container_name: postgres
    restart: always
    labels:
      co.elastic.logs/enabled: true
    environment:
      - POSTGRES_USER=hector
      - POSTGRES_PASSWORD=managerit
      - POSTGRES_DB=finalproject
      - TZ = Europe/Madrid
    ports:
      - 5432:5432
    volumes:
      - postgres-db:/var/lib/postgresql/data
      - ./runs/psrun.sh:/tmp/psrun.sh
      - ./database/postgresql.conf:/tmp/postgresql.conf
      - ./database/query.sql:/tmp/query.sql
      - ./database/logs:/var/log
    healthcheck: 
      test: ["CMD-SHELL", "pg_isready", "-d", "POSTGRES_DB"]
      interval: 5m
      timeout: 30s
      retries: 5
      start_period: 30s
  
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    restart: always
    labels:
      co.elastic.logs/enabled: false
    depends_on:
      - db
    environment:
      - PGADMIN_DEFAULT_EMAIL=hectoor.16@icloud.com
      - PGADMIN_DEFAULT_PASSWORD=managerit
      - PGADMIN_LISTEN_PORT=80
      - PGADMIN_CONFIG_ENHANCED_COOKIE_PROTECTION=True
      - PGADMIN_CONFIG_LOGIN_BANNER="Welcome back!"
      - PGADMIN_CONFIG_CONSOLE_LOG_LEVEL=10
    ports:
      - 5050:80
    volumes:
      - pgadmin-data:/pgadmin4
      - ./database/pgadmin/servers.json:/pgadmin4/servers.json
      - ./database/pgadmin/pgpass:/tmp/pgpass
      - ./runs/pgrun.sh:/tmp/pgrun.sh

  
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: always
    user: root
    labels:
      co.elastic.logs/enabled: false
    depends_on:
      - db
    ports: 
      - 3000:3000
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/provisioning/datasources/datasource.yml:/etc/grafana/provisioning/datasources/datasource.yml
      - ./grafana/provisioning/dashboards.yml:/etc/grafana/provisioning/dashboards/dashboards.yml
      - ./grafana/provisioning/datasources/dashboards:/dashboards
      - ./database/:/home/tmp
      - ./runs/grafanarun.sh:/tmp/grafanarun.sh
      - ./grafana/grafana.ini:/etc/grafana/grafana.ini
    environment:
      - DATABASE_USER=hector
      - DATABASE_PASS=managerit
      - DATABASE_NAME=finalproject
      - DATABASE_HOST=db
      - DATABASE_PORT=5432
      - GF_SECURITY_ADMIN_USER=hector
      - GF_SECURITY_ADMIN_PASSWORD=managerit 
      - TZ=Europe/Madrid
    healthcheck:
      test: [
        "CMD-SHELL",
        "curl --silent --fail localhost:3000 || exit 1",
      ]
      interval: 5m
      timeout: 30s
      retries: 5
      start_period: 30s

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    restart: always
    user: root
    labels:
      co.elastic.logs/enabled: false
    depends_on:
      - db
      - grafana
    ports:
      - 9090:9090
    volumes:
      - prometheus-data:/etc/prometheus
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    healthcheck:
      test: [
        "CMD",
        "curl" ,"-s", "-f", "http://localhost:9090/",
      ]
      interval: 5m
      timeout: 30s
      retries: 5
      start_period: 30s

  elastic:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.7.1
    container_name: elastic
    ports:
      - 9200:9200
    labels:
      co.elastic.logs/enabled: false
    environment:
      - ELASTIC_USER=hector
      - ELASTIC_PASSWORD=managerit
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms4g -Xmx4g
      - xpack.security.enabled=false
      - cluster.routing.allocation.disk.threshold_enabled=false
      - TAKE_FILE_OWNERSHIP=1
    volumes:
      - elastic-data:/usr/share/elasticsearch/data
    healthcheck:
      test: [
        "CMD-SHELL",
        "curl --silent --fail localhost:9200/_cluster/health || exit 1",
      ]
      interval: 5m
      timeout: 30s
      retries: 5
      start_period: 30s

  kibana:
    image: docker.elastic.co/kibana/kibana:8.7.1
    container_name: kibana
    ports:
      - 5601:5601
    labels:
      co.elastic.logs/enabled: false
    environment:
      - ELASTIC_USER=hector
      - ELASTIC_PASSWORD=managerit
      - SERVER_NAME=kibana
      - ELASTICSEARCH_HOSTS=http://elastic:9200
    volumes:
      - ./kibana/kibana.yml:/usr/share/kibana/config/kibana.yml
    depends_on:
      - elastic
    healthcheck:
      test: [
        "CMD-SHELL", 
        "curl --silent --fail localhost:5601 || exit 1",
        ]
      interval: 5m
      timeout: 30s
      retries: 5
      start_period: 30s
  
  filebeat:
    image: docker.elastic.co/beats/filebeat:8.7.1
    container_name: filebeat
    command: --strict.perms=false
    user: root
    restart: always
    labels:
      co.elastic.logs/enabled: false
    environment:
      - ELASTIC_PASSWORD=managerit
    volumes:
      - filebeat-data:/usr/share/filebeat/data
      - ./filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml
      - ./database/logs/:/var/log/postgres/
      - /var/lib/docker/containers/:/var/lib/docker/containers/:ro
      - /proc:/hostfs/proc:ro
      - /:/hostfs:ro
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - elastic
      - kibana


volumes:
  postgres-db:
  pgadmin-data:
  grafana-data:
  prometheus-data:
  elastic-data:
  filebeat-data: